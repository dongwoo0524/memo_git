#include<stdio.h>
#include <Windows.h>
#include<time.h>

#define BALL_SIZE 20     // 볼의 크기 상수를 정의
#define MOVE_STEP 5    // 볼의 이동 간격 상수를 정의

#define BALL_MAX 50

void main() {
	HWND    hwnd = GetForegroundWindow(); // 현재 윈도우의  핸들을 구한다. 
	HDC hdc = GetWindowDC(hwnd);

	srand((unsigned)time(NULL));
	int i, cnt = 0;
	//int x = 100;   
	//int y = 100;
	int dx[BALL_MAX];
	int dy[BALL_MAX];
	int x[BALL_MAX];
	int y[BALL_MAX];
	int arr[BALL_MAX];
	int arr2[BALL_MAX];
	for (i = 0; i < BALL_MAX; i++) {
		arr[i] = rand() % 470 + 30;
	}
	for (i = 0; i < BALL_MAX; i++) {
		arr2[i] = rand() % 360 + 40;
	}

	// 배경을 흰색으로 설정
	SelectObject(hdc, CreatePen(PS_SOLID, 1, RGB(255, 255, 255)));
	SelectObject(hdc, CreateSolidBrush(RGB(255, 255, 255)));
	Rectangle(hdc, 0, 0, GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN));

	// 그리는 펜의 테두리 색은 파란색, 채우는 색은 흰색으로 설정
	SelectObject(hdc, CreatePen(PS_SOLID, 3, RGB(0, 0, 255)));
	SelectObject(hdc, CreateSolidBrush(RGB(255, 255, 255)));

	// 파란색 테두리를 갖는 사각형을 그린다. 바탕색은 흰색
	Rectangle(hdc, 30, 40, 500 + BALL_SIZE + MOVE_STEP, 400 + BALL_SIZE + MOVE_STEP);

	TextOut(hdc, 220, 450, L"Ball Simulation", 15);
	for (int i = 0; i < BALL_MAX; i++) {
		x[i] = arr[i];
		y[i] = arr2[i];
		dx[i] = +5;
			dy[i] = +5;
	}
	while (1) {
		for (int i = 0; i < BALL_MAX; i++) {

			SelectObject(hdc, CreatePen(PS_SOLID, 3, RGB(0, 0, 255)));
			SelectObject(hdc, CreateSolidBrush(RGB(255, 0, 0)));

			// 원을 그린다. 
			Ellipse(hdc, x[i], y[i], x[i] + BALL_SIZE, y[i] + BALL_SIZE);
		
			// 그리는 펜의 색은 흰색, 채우는 색은 흰색

			Sleep(1);
			x[i] += dx[i];
			y[i] += dy[i];

			if (x[i] >= 500) dx[i] = -MOVE_STEP;              // x 좌표 값의 우측 경계를 만난 경우 dx는 감소하는 방향으로
			if (x[i] <= 30 + MOVE_STEP) dx[i] = +MOVE_STEP;    // x 좌표 값의 좌측 경계를 만난 경우 dx는 증가하는 방향으로

			if (y[i] >= 400) dy[i] = -MOVE_STEP;              // y 좌표 값이 아래 경계를 만난 경우 dy는 감소하는 방향으로
			if (y[i] <= (40 + MOVE_STEP)) dy[i] = +MOVE_STEP;
		}
		Sleep(1);

		SelectObject(hdc, CreatePen(PS_SOLID, 1, RGB(255, 255, 255)));
		SelectObject(hdc, CreateSolidBrush(RGB(255, 255, 255)));
		Rectangle(hdc, 0, 0, GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN));
		// 그리는 펜의 테두리 색은 파란색, 채우는 색은 흰색으로 설정
		SelectObject(hdc, CreatePen(PS_SOLID, 3, RGB(0, 0, 255)));
		SelectObject(hdc, CreateSolidBrush(RGB(255, 255, 255)));

		// 파란색 테두리를 갖는 사각형을 그린다. 바탕색은 흰색
		Rectangle(hdc, 30, 40, 500 + BALL_SIZE + MOVE_STEP, 400 + BALL_SIZE + MOVE_STEP);
	}
}
